{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umipa\\\\Desktop\\\\carstack-client\\\\src\\\\Container\\\\App.js\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { configureStore } from '../Store';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\nimport { setAuthorizationToken, setCurrentUser } from '../Store/Action/auth';\nimport jwtDecode from 'jwt-decode';\nconst store = configureStore();\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken); //prevent someone from manually tempering with the key of jwtToken in localstorage\n\n  try {\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n  } catch (e) {\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/umipa/Desktop/carstack-client/src/Container/App.js"],"names":["React","Provider","BrowserRouter","Router","configureStore","Navbar","Main","CssBaseline","setAuthorizationToken","setCurrentUser","jwtDecode","store","localStorage","jwtToken","dispatch","e","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAO,WAAP;AACA,SAASC,qBAAT,EAAgCC,cAAhC,QAAsD,sBAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,KAAK,GAAGP,cAAc,EAA5B;;AACA,IAAGQ,YAAY,CAACC,QAAhB,EAAyB;AACvBL,EAAAA,qBAAqB,CAACI,YAAY,CAACC,QAAd,CAArB,CADuB,CAEvB;;AACA,MAAG;AACDF,IAAAA,KAAK,CAACG,QAAN,CAAeL,cAAc,CAACC,SAAS,CAACE,YAAY,CAACC,QAAd,CAAV,CAA7B;AACD,GAFD,CAEC,OAAME,CAAN,EAAQ;AACPJ,IAAAA,KAAK,CAACG,QAAN,CAAeL,cAAc,CAAC,EAAD,CAA7B;AACD;AACF;;AAED,SAASO,GAAT,GAAe;AACb,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD;;AAED,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { configureStore } from '../Store';\nimport Navbar from './Navbar';\nimport Main from './Main'\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport './App.css';\nimport { setAuthorizationToken, setCurrentUser } from '../Store/Action/auth';\nimport jwtDecode from 'jwt-decode';\n\nconst store = configureStore()\nif(localStorage.jwtToken){\n  setAuthorizationToken(localStorage.jwtToken);\n  //prevent someone from manually tempering with the key of jwtToken in localstorage\n  try{\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)))\n  }catch(e){\n    store.dispatch(setCurrentUser({}));\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <CssBaseline />\n        <Navbar />\n        <Main />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}