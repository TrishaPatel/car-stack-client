{"ast":null,"code":"import { apiCall } from '../../services/api';\nimport { addError, removeError } from './errors';\nimport { SET_MYGARAGE } from '../actiontypes';\nexport function setMyGarage(list) {\n  return {\n    type: SET_MYGARAGE,\n    list\n  };\n}\nexport function myGarage(userdata, token) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return apiCall(\"get\", `/api/user/${userdata}/ads/`, token).then(({\n        addata\n      }) => {\n        dispatch(setMyGarage(addata));\n        dispatch(removeError());\n        resolve();\n      }).catch(err => {\n        dispatch(addError(err.message));\n        reject();\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/umipa/Desktop/carstack-client/src/Store/Action/myGarage.js"],"names":["apiCall","addError","removeError","SET_MYGARAGE","setMyGarage","list","type","myGarage","userdata","token","dispatch","Promise","resolve","reject","then","addata","catch","err","message"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,UAAtC;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAEA,OAAO,SAASC,WAAT,CAAsBC,IAAtB,EAA2B;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEH,YADH;AAEHE,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,QAAT,CAAkBC,QAAlB,EAA4BC,KAA5B,EAAkC;AACrC,SAAOC,QAAQ,IAAI;AACf,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,aAAOb,OAAO,CAAC,KAAD,EAAS,aAAYQ,QAAS,OAA9B,EAAsCC,KAAtC,CAAP,CACNK,IADM,CACD,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAgB;AAClBL,QAAAA,QAAQ,CAACN,WAAW,CAACW,MAAD,CAAZ,CAAR;AACAL,QAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACAU,QAAAA,OAAO;AACV,OALM,EAMNI,KANM,CAMCC,GAAD,IAAS;AACZP,QAAAA,QAAQ,CAACT,QAAQ,CAACgB,GAAG,CAACC,OAAL,CAAT,CAAR;AACAL,QAAAA,MAAM;AACT,OATM,CAAP;AAUH,KAXM,CAAP;AAYH,GAbD;AAcH","sourcesContent":["import { apiCall } from '../../services/api';\r\nimport { addError, removeError } from './errors';\r\nimport {SET_MYGARAGE} from '../actiontypes';\r\n\r\nexport function setMyGarage (list){\r\n    return {\r\n        type: SET_MYGARAGE,\r\n        list\r\n    }\r\n}\r\n\r\nexport function myGarage(userdata, token){\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            return apiCall(\"get\", `/api/user/${userdata}/ads/`, token)\r\n            .then(({ addata }) => {\r\n                dispatch(setMyGarage(addata))\r\n                dispatch(removeError());\r\n                resolve();\r\n            })\r\n            .catch((err) => {\r\n                dispatch(addError(err.message));\r\n                reject();\r\n            })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}