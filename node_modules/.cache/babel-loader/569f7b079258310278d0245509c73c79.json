{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umipa\\\\Desktop\\\\carstack-client\\\\src\\\\Container\\\\Routes.js\";\nimport React from 'react';\nimport { Switch, withRouter, Route } from 'react-router-dom';\nimport LandingPage from '../view/LandingPage/landingPage';\nimport Auth from '../view/Auth/Auth';\nimport { connect } from 'react-redux';\nimport { authUser } from '../Store/Action/auth';\nimport { myGarage } from '../Store/Action/myGarage';\nimport { addError, removeError } from \"../Store/Action/errors\";\nimport { addNewAd } from '../Store/Action/newAd';\nimport NewAd from '../view/MyGarage/NewAdPage/newAd'; // List of all Makes\n\nconst allMakes = [{\n  make: \"Honda\",\n  model: [\"civic\", \"crv\", \"pilot\"]\n}, {\n  make: \"Toyota\",\n  model: [\"corolla\", \"rav4\", \"prius\"]\n}];\nconst year = [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"];\nconst LocationList = [\"Toronto\", \"Mississauga\", \"Hamilton\", \"Oakville\", \"Burlington\"]; //function to extract models from specific make\n\nconst MakesList = [];\nallMakes.map(i => {\n  return MakesList.push(i.make);\n});\nconst radioItems = [\"New\", \"Used\", \"Certified Pre-Owned\"];\nconst categoryList = [\"sedan\", \"suv\", \"coupe\", \"truck\", \"hatchback\", \"convertible\", \"minivan\", \"wagon\", \"electric\"];\nconst transmission = [\"auto\", \"manual\"];\nconst fuelType = [\"gasoline\", \"diesel\", \"propane\", \"electric\"];\nconst doors = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n\nconst Routes = props => {\n  const {\n    addError,\n    removeError,\n    errors\n  } = props;\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LandingPage, Object.assign({}, props, {\n    allMakes: allMakes,\n    MakesList: MakesList,\n    radioItems: radioItems,\n    yearList: year,\n    LocationList: LocationList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Auth, Object.assign({\n    onAuth: authUser\n  }, props, {\n    errors: errors,\n    removeError: removeError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Auth, Object.assign({\n    onAuth: authUser,\n    isSignup: true\n  }, props, {\n    errors: errors,\n    removeError: removeError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/newad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewAd, {\n    yearList: year,\n    MakesList: MakesList,\n    allMakes: allMakes,\n    categoryList: categoryList,\n    transmission: transmission,\n    doors: doors,\n    fuelType: fuelType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/myads\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    errors: state.errors,\n    year: year,\n    SetGarage: state.myGarage,\n    newAd: state.addNewAd\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  authUser,\n  removeError,\n  myGarage,\n  addNewAd\n})(Routes));","map":{"version":3,"sources":["C:/Users/umipa/Desktop/carstack-client/src/Container/Routes.js"],"names":["React","Switch","withRouter","Route","LandingPage","Auth","connect","authUser","myGarage","addError","removeError","addNewAd","NewAd","allMakes","make","model","year","LocationList","MakesList","map","i","push","radioItems","categoryList","transmission","fuelType","doors","Routes","props","errors","mapStateToProps","state","currentUser","SetGarage","newAd"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Switch, withRouter, Route} from 'react-router-dom';\r\nimport LandingPage from '../view/LandingPage/landingPage';\r\nimport Auth from '../view/Auth/Auth'\r\nimport { connect } from 'react-redux'\r\nimport { authUser } from '../Store/Action/auth';\r\nimport { myGarage } from '../Store/Action/myGarage'\r\nimport { addError, removeError } from \"../Store/Action/errors\";\r\nimport { addNewAd } from '../Store/Action/newAd';\r\nimport NewAd from '../view/MyGarage/NewAdPage/newAd'\r\n// List of all Makes\r\nconst allMakes = [\r\n    {\r\n        make: \"Honda\",\r\n        model: [\"civic\", \"crv\", \"pilot\"]\r\n    },\r\n    {\r\n        make: \"Toyota\",\r\n        model: [\"corolla\", \"rav4\", \"prius\"]\r\n    }\r\n  ];\r\n\r\n  const year = [\"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"];\r\n  const LocationList = [\"Toronto\", \"Mississauga\", \"Hamilton\", \"Oakville\", \"Burlington\"]\r\n\r\n  //function to extract models from specific make\r\n  const MakesList =[];\r\n  allMakes.map(i => {\r\n   return MakesList.push(i.make);\r\n  });\r\n\r\n\r\n  const radioItems = [\r\n    \"New\",\r\n    \"Used\",\r\n    \"Certified Pre-Owned\"\r\n  ]\r\n  const categoryList = [\"sedan\", \"suv\", \"coupe\", \"truck\", \"hatchback\", \"convertible\", \"minivan\", \"wagon\", \"electric\"]\r\n  const transmission = [\"auto\", \"manual\"]\r\n  const fuelType = [\"gasoline\", \"diesel\", \"propane\", \"electric\"]\r\n  const doors = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]\r\n\r\nconst Routes = (props) => {\r\n  const {addError, removeError,errors} = props\r\n    return (\r\n       \r\n      <Switch>\r\n          {/* Landing Page Link */}\r\n        <Route exact path=\"/\"> \r\n            <LandingPage \r\n                {...props} \r\n                allMakes={allMakes}\r\n                MakesList={MakesList} \r\n                radioItems={radioItems} \r\n                yearList={year} \r\n                LocationList={LocationList} />\r\n        </Route>\r\n        {/* Auth Page Link */}\r\n        <Route exact path=\"/signin\">\r\n           <Auth \r\n              onAuth={authUser} \r\n              {...props}  \r\n              errors={errors} \r\n              removeError={removeError}   \r\n            />\r\n        </Route>\r\n\r\n        <Route exact path=\"/signup\">\r\n            <Auth \r\n              onAuth={authUser} \r\n              isSignup={true} \r\n              {...props} \r\n              errors={errors} \r\n              removeError={removeError}  \r\n            />\r\n        </Route>\r\n        {/* New ad Link  */}\r\n        <Route exact path=\"/newad\">\r\n          <NewAd \r\n            yearList={year}\r\n            MakesList={MakesList} \r\n            allMakes={allMakes}\r\n            categoryList={categoryList}\r\n            transmission={transmission} \r\n            doors={doors} \r\n            fuelType={fuelType}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/myads\">\r\n\r\n        </Route>\r\n      </Switch>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.currentUser,\r\n        errors: state.errors,\r\n        year: year,\r\n        SetGarage: state.myGarage,\r\n        newAd: state.addNewAd\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps, {authUser, removeError, myGarage, addNewAd})\r\n    (Routes)\r\n    );"]},"metadata":{},"sourceType":"module"}