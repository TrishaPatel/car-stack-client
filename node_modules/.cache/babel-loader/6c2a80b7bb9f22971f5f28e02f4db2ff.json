{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umipa\\\\Desktop\\\\carstack-client\\\\src\\\\Components\\\\TextInput\\\\textInput.js\";\nimport React, { useState, useEffect } from 'react'; //material ui components\n\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  textBox: {\n    minWidth: 200\n  }\n}));\n\nconst TextInput = props => {\n  const {\n    labelText,\n    getTextValue,\n    isFullWidth,\n    isDescription,\n    item\n  } = props;\n  const classes = useStyles(props); //setting the state of the user input\n\n  const [textValue, setTextValue] = useState({\n    \"value\": item ? item : \"\"\n  }); //only to be called when there is a change in state\n\n  useEffect(() => {\n    getTextValue(textValue.value);\n  }, [textValue.value]); //handle the user input\n\n  const handleChange = e => {\n    setTextValue({\n      value: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: isDescription ? true : false,\n    multiline: isDescription ? true : false,\n    rows: isDescription ? \"4\" : \"0\",\n    onChange: handleChange,\n    label: labelText ? labelText : \"Enter Label\",\n    variant: isDescription ? \"outlined\" : \"standard\",\n    className: classes.textBox,\n    value: textValue.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default TextInput;\nTextInput.propTypes = {\n  labelText: PropTypes.string,\n  getTextValue: PropTypes.func,\n  isFullWidth: PropTypes.bool,\n  isDescription: PropTypes.bool,\n  item: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/umipa/Desktop/carstack-client/src/Components/TextInput/textInput.js"],"names":["React","useState","useEffect","TextField","makeStyles","PropTypes","useStyles","theme","textBox","minWidth","TextInput","props","labelText","getTextValue","isFullWidth","isDescription","item","classes","textValue","setTextValue","value","handleChange","e","target","propTypes","string","func","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACnCC,EAAAA,OAAO,EAAC;AACJC,IAAAA,QAAQ,EAAE;AADN;AAD2B,CAAL,CAAN,CAA5B;;AAKA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,WAA1B;AAAuCC,IAAAA,aAAvC;AAAsDC,IAAAA;AAAtD,MAA8DL,KAApE;AACA,QAAMM,OAAO,GAAGX,SAAS,CAACK,KAAD,CAAzB,CAFyB,CAGzB;;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC;AACvC,aAASe,IAAI,GAAEA,IAAF,GAAO;AADmB,GAAD,CAA1C,CAJyB,CAQzB;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACK,SAAS,CAACE,KAAX,CAAZ;AACH,GAFQ,EAEN,CAACF,SAAS,CAACE,KAAX,CAFM,CAAT,CATyB,CAazB;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBH,IAAAA,YAAY,CAAC;AACTC,MAAAA,KAAK,EAAEE,CAAC,CAACC,MAAF,CAASH;AADP,KAAD,CAAZ;AAGH,GAJD;;AAKA,sBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAEL,aAAa,GAAE,IAAF,GAAS,KADrC;AAEI,IAAA,SAAS,EAAEA,aAAa,GAAE,IAAF,GAAS,KAFrC;AAGI,IAAA,IAAI,EAAEA,aAAa,GAAE,GAAF,GAAQ,GAH/B;AAII,IAAA,QAAQ,EAAEM,YAJd;AAKI,IAAA,KAAK,EAAET,SAAS,GAAEA,SAAF,GAAc,aALlC;AAMI,IAAA,OAAO,EAAEG,aAAa,GAAE,UAAF,GAAe,UANzC;AAOI,IAAA,SAAS,EAAEE,OAAO,CAACT,OAPvB;AAQI,IAAA,KAAK,EAAEU,SAAS,CAACE,KARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAYH,CA/BD;;AAiCA,eAAeV,SAAf;AAEAA,SAAS,CAACc,SAAV,GAAsB;AAClBZ,EAAAA,SAAS,EAAEP,SAAS,CAACoB,MADH;AAElBZ,EAAAA,YAAY,EAAER,SAAS,CAACqB,IAFN;AAGlBZ,EAAAA,WAAW,EAAET,SAAS,CAACsB,IAHL;AAIlBZ,EAAAA,aAAa,EAAEV,SAAS,CAACsB,IAJP;AAKlBX,EAAAA,IAAI,EAAEX,SAAS,CAACoB;AALE,CAAtB","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n//material ui components\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textBox:{\r\n        minWidth: 200,\r\n    }\r\n}))\r\nconst TextInput = (props) => {\r\n    const {labelText, getTextValue, isFullWidth, isDescription, item} = props;\r\n    const classes = useStyles(props)\r\n    //setting the state of the user input\r\n    const [textValue, setTextValue] = useState({\r\n        \"value\": item? item:\"\"\r\n    })\r\n\r\n    //only to be called when there is a change in state\r\n    useEffect(() => {\r\n        getTextValue(textValue.value)\r\n    }, [textValue.value]);\r\n\r\n    //handle the user input\r\n    const handleChange = (e) => {\r\n        setTextValue({\r\n            value: e.target.value\r\n        })\r\n    }\r\n    return (\r\n        <TextField \r\n            fullWidth={isDescription? true : false}\r\n            multiline={isDescription? true : false} \r\n            rows={isDescription? \"4\" : \"0\"} \r\n            onChange={handleChange} \r\n            label={labelText? labelText : \"Enter Label\"}\r\n            variant={isDescription? \"outlined\" : \"standard\"}\r\n            className={classes.textBox}\r\n            value={textValue.value}\r\n             />\r\n    )\r\n}\r\n\r\nexport default TextInput;\r\n\r\nTextInput.propTypes = {\r\n    labelText: PropTypes.string,\r\n    getTextValue: PropTypes.func, \r\n    isFullWidth: PropTypes.bool, \r\n    isDescription: PropTypes.bool, \r\n    item: PropTypes.string\r\n}"]},"metadata":{},"sourceType":"module"}