{"ast":null,"code":"import { apiCall, setTokenHeader } from '../../services/api';\nimport { SET_CURRENT_USER } from '../actiontypes';\nimport { addError, removeError } from './errors';\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\nexport function setAuthorizationToken(token) {\n  setTokenHeader(token);\n}\nexport function logout() {\n  return dispatch => {\n    localStorage.clear();\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  };\n}\nexport function authUser(type, userData) {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      return apiCall(\"post\", `/api/auth/${type}`, userData).then(({\n        token,\n        ...user\n      }) => {\n        localStorage.setItem(\"jwtToken\", token);\n        setAuthorizationToken(token);\n        dispatch(setCurrentUser(user));\n        dispatch(removeError());\n        resolve();\n      }).catch(err => {\n        dispatch(addError(err.message));\n        reject();\n      });\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/umipa/Desktop/carstack-client/src/Store/Action/auth.js"],"names":["apiCall","setTokenHeader","SET_CURRENT_USER","addError","removeError","setCurrentUser","user","type","setAuthorizationToken","token","logout","dispatch","localStorage","clear","authUser","userData","Promise","resolve","reject","then","setItem","catch","err","message"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,cAAlB,QAAwC,oBAAxC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,UAAtC;AAGA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEL,gBADH;AAEHI,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,qBAAT,CAAgCC,KAAhC,EAAsC;AACzCR,EAAAA,cAAc,CAACQ,KAAD,CAAd;AACH;AAED,OAAO,SAASC,MAAT,GAAiB;AACpB,SAAOC,QAAQ,IAAI;AACjBC,IAAAA,YAAY,CAACC,KAAb;AACAL,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAG,IAAAA,QAAQ,CAACN,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAJD;AAKD;AAEH,OAAO,SAASS,QAAT,CAAkBP,IAAlB,EAAwBQ,QAAxB,EAAiC;AACpC,SAAOJ,QAAQ,IAAI;AACf,WAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,aAAOlB,OAAO,CAAC,MAAD,EAAU,aAAYO,IAAK,EAA3B,EAA8BQ,QAA9B,CAAP,CACFI,IADE,CACG,CAAC;AAAEV,QAAAA,KAAF;AAAS,WAAGH;AAAZ,OAAD,KAAwB;AAC1BM,QAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCX,KAAjC;AACAD,QAAAA,qBAAqB,CAACC,KAAD,CAArB;AACAE,QAAAA,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CAAR;AACAK,QAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACAa,QAAAA,OAAO;AACV,OAPE,EAQFI,KARE,CAQIC,GAAG,IAAI;AACVX,QAAAA,QAAQ,CAACR,QAAQ,CAACmB,GAAG,CAACC,OAAL,CAAT,CAAR;AACAL,QAAAA,MAAM;AACT,OAXE,CAAP;AAYH,KAbM,CAAP;AAcH,GAfD;AAgBH","sourcesContent":["import { apiCall, setTokenHeader } from '../../services/api';\r\nimport { SET_CURRENT_USER } from '../actiontypes';\r\nimport { addError, removeError } from './errors';\r\n\r\n\r\nexport function setCurrentUser(user) {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        user\r\n    };\r\n}\r\n\r\nexport function setAuthorizationToken (token){\r\n    setTokenHeader(token);\r\n}\r\n\r\nexport function logout(){\r\n    return dispatch => {\r\n      localStorage.clear();\r\n      setAuthorizationToken(false);\r\n      dispatch(setCurrentUser({}));\r\n    }\r\n  }\r\n\r\nexport function authUser(type, userData){\r\n    return dispatch => {\r\n        return new Promise((resolve, reject) => {\r\n            return apiCall(\"post\", `/api/auth/${type}`, userData)\r\n                .then(({ token, ...user }) => {\r\n                    localStorage.setItem(\"jwtToken\", token);\r\n                    setAuthorizationToken(token);\r\n                    dispatch(setCurrentUser(user));\r\n                    dispatch(removeError());\r\n                    resolve();\r\n                })\r\n                .catch(err => {\r\n                    dispatch(addError(err.message));\r\n                    reject();\r\n                })\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}