{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport axios from 'axios';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCAh-qpq22gmZ__SmxI-VYeTdizSahVWJU\",\n  authDomain: \"photography-bd132.firebaseapp.com\",\n  databaseURL: \"https://photography-bd132.firebaseio.com\",\n  projectId: \"photography-bd132\",\n  storageBucket: \"photography-bd132.appspot.com\",\n  messagingSenderId: \"1004088657969\",\n  appId: \"1:1004088657969:web:27b8d2e6ad243c32fb2d10\",\n  measurementId: \"G-RRGVHZFERP\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nvar storageRef = firebase.storage().ref();\nexport const uploadImages = (files, userId) => {\n  var imgUrl = [];\n\n  for (let i = 0; i < files.lenght; i++) {\n    var uploadTask = storageRef.child(`images/${userId}/` + files[i].name).put(files[i]); // Listen for state changes, errors, and completion of the upload.\n\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n    function (snapshot) {\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log('Upload is ' + progress + '% done');\n\n      switch (snapshot.state) {\n        case firebase.storage.TaskState.PAUSED:\n          // or 'paused'\n          console.log('Upload is paused');\n          break;\n\n        case firebase.storage.TaskState.RUNNING:\n          // or 'running'\n          console.log('Upload is running');\n          break;\n      }\n    }, function (error) {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case 'storage/unauthorized':\n          // User doesn't have permission to access the object\n          break;\n\n        case 'storage/canceled':\n          // User canceled the upload\n          break;\n\n        case 'storage/unknown':\n          // Unknown error occurred, inspect error.serverResponse\n          break;\n      }\n    }, function () {\n      // Upload completed successfully, now we can get the download URL\n      uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n        console.log('File available at', downloadURL);\n        imgUrl.push(downloadURL);\n      });\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/umipa/Desktop/carstack-client/src/Handlers/firebase.js"],"names":["firebase","axios","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","storageRef","storage","ref","uploadImages","files","userId","imgUrl","i","lenght","uploadTask","child","name","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","console","log","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","downloadURL","push"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,mCAFK;AAGjBC,EAAAA,WAAW,EAAE,0CAHI;AAIjBC,EAAAA,SAAS,EAAE,mBAJM;AAKjBC,EAAAA,aAAa,EAAE,+BALE;AAMjBC,EAAAA,iBAAiB,EAAE,eANF;AAOjBC,EAAAA,KAAK,EAAE,4CAPU;AAQjBC,EAAAA,aAAa,EAAE;AARE,CAArB,C,CAUE;;AACAV,QAAQ,CAACW,aAAT,CAAuBT,cAAvB;AACF,IAAIU,UAAU,GAAGZ,QAAQ,CAACa,OAAT,GAAmBC,GAAnB,EAAjB;AAEA,OAAO,MAAMC,YAAY,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEH,KAAK,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACxC,QAAIE,UAAU,GAAGT,UAAU,CAACU,KAAX,CAAkB,UAASL,MAAO,GAAjB,GAAsBD,KAAK,CAACG,CAAD,CAAL,CAASI,IAAhD,EAAsDC,GAAtD,CAA0DR,KAAK,CAACG,CAAD,CAA/D,CAAjB,CADwC,CAExC;;AACIE,IAAAA,UAAU,CAACI,EAAX,CAAczB,QAAQ,CAACa,OAAT,CAAiBa,SAAjB,CAA2BC,aAAzC,EAAwD;AACpD,cAASC,QAAT,EAAmB;AACf;AACA,UAAIC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAAnE;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,QAAf,GAA0B,QAAtC;;AACA,cAAQD,QAAQ,CAACM,KAAjB;AACA,aAAKlC,QAAQ,CAACa,OAAT,CAAiBsB,SAAjB,CAA2BC,MAAhC;AAAwC;AACpCJ,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACJ,aAAKjC,QAAQ,CAACa,OAAT,CAAiBsB,SAAjB,CAA2BE,OAAhC;AAAyC;AACrCL,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AANJ;AAQH,KAbL,EAcI,UAASK,KAAT,EAAgB;AACZ;AACA;AACA,cAAQA,KAAK,CAACC,IAAd;AACI,aAAK,sBAAL;AACA;AACA;;AAEA,aAAK,kBAAL;AACA;AACA;;AAEA,aAAK,iBAAL;AACA;AACA;AAXJ;AAaH,KA9BL,EA8BO,YAAW;AACd;AACIlB,MAAAA,UAAU,CAACO,QAAX,CAAoBd,GAApB,CAAwB0B,cAAxB,GACKC,IADL,CACU,UAASC,WAAT,EAAsB;AAC5BV,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCS,WAAhC;AACAxB,QAAAA,MAAM,CAACyB,IAAP,CAAYD,WAAZ;AACH,OAJD;AAOH,KAvCL;AAwCC;AACJ,CA9CK","sourcesContent":["import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport axios from 'axios';\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCAh-qpq22gmZ__SmxI-VYeTdizSahVWJU\",\r\n    authDomain: \"photography-bd132.firebaseapp.com\",\r\n    databaseURL: \"https://photography-bd132.firebaseio.com\",\r\n    projectId: \"photography-bd132\",\r\n    storageBucket: \"photography-bd132.appspot.com\",\r\n    messagingSenderId: \"1004088657969\",\r\n    appId: \"1:1004088657969:web:27b8d2e6ad243c32fb2d10\",\r\n    measurementId: \"G-RRGVHZFERP\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\nvar storageRef = firebase.storage().ref();\r\n\r\nexport const uploadImages =(files, userId) => {\r\n    var imgUrl = [];\r\n    for (let i = 0; i< files.lenght; i++){\r\n var uploadTask = storageRef.child(`images/${userId}/` + files[i].name).put(files[i]);\r\n // Listen for state changes, errors, and completion of the upload.\r\n     uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n         function(snapshot) {\r\n             // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n             var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n             console.log('Upload is ' + progress + '% done');\r\n             switch (snapshot.state) {\r\n             case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                 console.log('Upload is paused');\r\n                 break;\r\n             case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                 console.log('Upload is running');\r\n                 break;\r\n             }\r\n         }, \r\n         function(error) {\r\n             // A full list of error codes is available at\r\n             // https://firebase.google.com/docs/storage/web/handle-errors\r\n             switch (error.code) {\r\n                 case 'storage/unauthorized':\r\n                 // User doesn't have permission to access the object\r\n                 break;\r\n\r\n                 case 'storage/canceled':\r\n                 // User canceled the upload\r\n                 break;\r\n\r\n                 case 'storage/unknown':\r\n                 // Unknown error occurred, inspect error.serverResponse\r\n                 break;\r\n         }\r\n         }, function() {\r\n         // Upload completed successfully, now we can get the download URL\r\n             uploadTask.snapshot.ref.getDownloadURL()\r\n                 .then(function(downloadURL) {\r\n                 console.log('File available at',downloadURL);\r\n                 imgUrl.push(downloadURL)\r\n             })\r\n                   \r\n             \r\n         });  \r\n     }   \r\n }"]},"metadata":{},"sourceType":"module"}